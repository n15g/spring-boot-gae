plugins {
    id "io.codearte.nexus-staging" version "0.11.0"
}

apply plugin: 'io.codearte.nexus-staging'
apply plugin: 'java'
apply plugin: 'wrapper'
apply plugin: 'signing'
apply plugin: 'maven'


description 'Spring Boot Google App Engine Plugin'
group 'com.github.n15g'

sourceCompatibility = 1.8

repositories {
    mavenCentral()
}

dependencies {
    compile 'com.google.code.findbugs:jsr305:3.0.2'
    compile "com.google.appengine:appengine-api-1.0-sdk:${appengineVersion}"
    compile "com.googlecode.objectify:objectify:${objectifyVersion}"
    compile 'org.apache.commons:commons-lang3:3.6'
    compile 'org.apache.commons:commons-text:1.1'
    compile 'com.google.guava:guava:23.0'

    compile 'javax.servlet:javax.servlet-api:3.1.0'
    compile "org.springframework.boot:spring-boot-starter:${springBootVersion}"
    compile 'org.springframework.data:spring-data-commons:1.13.6.RELEASE'
    compile 'org.springframework:spring-tx:4.3.11.RELEASE'

    compileOnly "org.springframework.boot:spring-boot-configuration-processor:${springBootVersion}"

    testCompile 'com.openpojo:openpojo:0.8.6'
    testCompile "com.google.appengine:appengine-testing:${appengineVersion}"
    testCompile "com.google.appengine:appengine-api-stubs:${appengineVersion}"
    testCompile "org.springframework.boot:spring-boot-starter-test:${springBootVersion}"
}

if (project.hasProperty('release')) {
    signing {
        sign configurations.archives
    }

    task javadocJar(type: Jar) {
        classifier = 'javadoc'
        from javadoc
    }

    task sourcesJar(type: Jar) {
        classifier = 'sources'
        from sourceSets.main.allSource
    }

    task testJar(type: Jar) {
        classifier = 'tests'
        from sourceSets.test.output
    }

    task testSourcesJar(type: Jar) {
        classifier = 'testSources'
        from sourceSets.test.allSource
    }

    artifacts {
        archives javadocJar, sourcesJar, testJar, testSourcesJar
    }

    uploadArchives {
        repositories {
            mavenDeployer {
                beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

                repository(url: "https://oss.sonatype.org/service/local/staging/deploy/maven2/") {
                    authentication(userName: ossrhUser, password: ossrhPassword)
                }

                pom.project {
                    name project.name
                    description project.description
                    packaging 'jar'
                    url 'https://github.com/n15g/spring-boot-gae'

                    scm {
                        connection 'https://github.com/n15g/spring-boot-gae.git'
                        developerConnection 'https://github.com/n15g/spring-boot-gae.git'
                        url 'https://github.com/n15g/spring-boot-gae.git'
                    }

                    licenses {
                        license {
                            name 'The MIT License (MIT)'
                            url 'http://opensource.org/licenses/MIT'
                            distribution 'repo'
                        }
                    }

                    developers {
                        developer {
                            id = 'nicholas-armstrong'
                            name = 'Nicholas Armstrong'
                            email = 'nick@nicks-mail.com'
                        }
                    }
                }
            }
        }
    }
}